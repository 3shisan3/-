========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : bw
========================================================================


AppWizard已为您创建了该bw应用程序。这个应用程序
不仅展示了使用Microsoft Foundation类的基础
但这也是编写应用程序的起点。

此文件包含在每个文件中可以找到的内容的摘要。
组成您的bw应用程序。

bw.dsp
    该文件（项目文件）包含项目级别的信息，以及
    用于构建单个项目或子项目。其他用户可以共享
    项目（.dsp）文件，但它们应在本地导出makefile。

bw.h
    这是应用程序的主头文件。它包括其他
    项目特定的标头（包括Resource.h），并声明
    CBwApp应用程序类。

bw.cpp
    这是包含应用程序的主要应用程序源文件
    CBwApp类。

bw.rc
    这是所有Microsoft Windows资源的清单，
    程序用途。它包括存储的图标，位图和光标
    在RES子目录中。该文件可以在Microsoft中直接编辑
Visual C ++。

bw.clw
    该文件包含ClassWizard用于编辑现有信息的信息
    类或添加新类。 ClassWizard也使用此文件来存储
    创建和编辑消息映射和对话框数据所需的信息
    映射并创建原型成员函数。

res \ bw.ico
    这是一个图标文件，用作应用程序的图标。这个
    图标包含在主要资源文件bw.rc中。

res \ bw.rc2
    该文件包含未被Microsoft编辑的资源
Visual C ++。您应该放置所有不可编辑的资源
该文件中的资源编辑器。



/////////////////////////////////////////////////////////////////////////////

对于主框架窗口：

MainFrm.h，MainFrm.cpp
    这些文件包含框架类CMainFrame，该框架类派生自
    CFrameWnd并控制所有SDI框架功能。

res \ Toolbar.bmp
    此位图文件用于为工具栏创建平铺图像。
    初始工具栏和状态栏在CMainFrame中构造
    类。使用资源编辑器编辑此工具栏位图，然后
    更新bw.rc中的IDR_MAINFRAME TOOLBAR数组以添加
    工具栏按钮。
///////////////////////////////////////////////////// ////////////////////////////

AppWizard创建一种文档类型和一种视图：

bwDoc.h，bwDoc.cpp-文档
    这些文件包含您的CBwDoc类。将这些文件编辑为
    添加您的特殊文档数据并实现文件保存和加载
    （通过CBwDoc :: Serialize）。

bwView.h，bwView.cpp-文档的视图
    这些文件包含您的CBwView类。
    CBwView对象用于查看CBwDoc对象。



/////////////////////////////////////////////////////////////////////////////
其他标准文件：

StdAfx.h，StdAfx.cpp
    这些文件用于构建预编译头（PCH）文件
    名为bw.pch和预编译的类型文件StdAfx.obj。

Resource.h
    这是标准头文件，它定义了新的资源ID。
    Microsoft Visual C ++读取并更新此文件。

/////////////////////////////////////////////////////////////////////////////
其他说明：

AppWizard使用“ TODO：”来表示部分源代码
应该添加或自定义。

如果您的应用程序在共享DLL中使用MFC，并且您的应用程序是
使用操作系统当前语言以外的语言，您
将需要复制相应的本地化资源MFC42XXX.DLL
从Microsoft Visual C ++ CD-ROM到system或system32目录中，
并将其重命名为MFCLOC.DLL。 （“ XXX”代表语言缩写。
例如，MFC42DEU.DLL包含翻译成德语的资源。）如果您
不这样做，您的应用程序的某些UI元素将保留在
操作系统的语言。

/////////////////////////////////////////////////////////////////////////////
